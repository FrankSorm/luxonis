{"version":3,"sources":["components/DataList.tsx","App.tsx","index.js"],"names":["FontAwesomeIcon","faAnglesLeft","faAngleLeft","faAnglesRight","faAngleRight","DataList","data","setData","useState","currentPage","setCurrentPage","totalPages","setTotalPages","totalCount","setTotalCount","useEffect","async","response","fetch","concat","page","result","json","error","console","fetchData","handlePageChange","newPage","_jsxs","children","_jsx","map","item","title","src","image_url","alt","id","Array","from","length","_","index","onClick","disabled","icon","style","color","Math","min","pageNumber","startPage","max","floor","visiblePages","App","ReactDOM","render","React","StrictMode","document","getElementById"],"mappings":"0LAwE0BA,IAAsBC,IACvBD,IAAsBE,IACpBF,IAAsBG,IACvBH,IAAsBI,IAgGjCC,MAxFgBA,KAC7B,MAAOC,EAAMC,GAAWC,mBAAqB,KACtCC,EAAaC,GAAkBF,mBAAiB,IAChDG,EAAYC,GAAiBJ,mBAAiB,IAC9CK,EAAYC,GAAiBN,mBAAiB,GAgBrDO,qBAAU,KAbQC,WAChB,IACE,MAAMC,QAAiBC,MAAM,uCAADC,OAAwCC,IAC9DC,QAA4BJ,EAASK,OAC3Cf,EAAQc,EAAOf,MACfI,EAAeW,EAAOD,MACtBR,EAAcS,EAAOV,YACrBG,EAAcO,EAAOR,WACvB,CAAE,MAAOU,GACPC,QAAQD,MAAM,sBAAuBA,EACvC,GAIAE,CAAUhB,EAAY,GACrB,CAACA,IAEJ,MAAMiB,EAAoBC,IACxBjB,EAAeiB,EAAQ,EAGzB,OACEC,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,cACJC,cAAA,MAAAD,SACGvB,EAAKyB,KAAKC,GACTJ,eAAA,MAAAC,SAAA,CACEC,cAAA,UAAAD,SAASG,EAAKC,QACdH,cAAA,SACAA,cAAA,OAAKI,IAAKF,EAAKG,UAAWC,IAAKJ,EAAKC,UAH7BD,EAAKK,QAQlBT,eAAA,OAAAC,SAAA,CACED,eAAA,KAAAC,SAAA,CAAG,QACKpB,EAAY,OAAKE,EAAW,qBAAmBE,KAEtDyB,MAAMC,KAAK,CAAEC,OAAQ7B,IAAc,CAAC8B,EAAGC,IAAUA,EAAQ,IAAGX,KAAKX,GAChEU,cAAA,UAAmBa,QAASA,IAAMjB,EAAiBN,GAAMS,SACtDT,GADUA,QAOjBQ,eAAA,OAAAC,SAAA,CACED,eAAA,UAAQe,QAASA,IAAMjB,EAAiB,GAAIkB,SAA0B,IAAhBnC,EAAkBoB,SAAA,CACxEC,cAAC9B,IAAe,CAAC6C,KAAM5C,MAAgB,YAEvC2B,eAAA,UAAQe,QAASA,IAAMjB,EAAiBjB,EAAc,GAAImC,SAA0B,IAAhBnC,EAAkBoB,SAAA,CACtFC,cAAC9B,IAAe,CAAC6C,KAAM3C,IAAa4C,MAAO,CAACC,MAAO,aAAe,eAIjET,MAAMC,KAAK,CAAEC,OAAQQ,KAAKC,IAzDZ,EAyD8BtC,KAAe,CAAC8B,EAAGC,KAC9D,MAAMQ,EAAaR,EAAQ,EACrBS,EAAYH,KAAKI,IAAI,EAAGJ,KAAKC,IAAIxC,EAAcuC,KAAKK,MAAMC,KAAmB3C,EA3DtE,EA2DkG,IAE/G,OACEmB,cAAA,UAAyBa,QAASA,IAAMjB,EAAiByB,EAAYT,GAAQE,SAAUM,IAAezC,EAAYoB,SAC/GsB,EAAYT,GADFQ,EAEJ,IAIbtB,eAAA,UAAQe,QAASA,IAAMjB,EAAiBjB,EAAc,GAAImC,SAAUnC,IAAgBE,EAAWkB,SAAA,CAAC,QACzFC,cAAC9B,IAAe,CAAC6C,KAAMzC,IAAc0C,MAAO,CAACC,MAAO,gBAE3DnB,eAAA,UAAQe,QAASA,IAAMjB,EAAiBf,GAAaiC,SAAUnC,IAAgBE,EAAWkB,SAAA,CAAC,QACpFC,cAAC9B,IAAe,CAAC6C,KAAM1C,IAAe2C,MAAO,CAACC,MAAO,qBAI1D,ECpHKQ,MATOA,IAElB3B,eAAA,OAAAC,SAAA,CACEC,cAAA,MAAAD,SAAI,8BACJC,cAACzB,EAAQ,O,MCtCfmD,IAASC,OACP3B,cAAC4B,IAAMC,WAAU,CAAA9B,SACfC,cAACyB,EAAG,MAENK,SAASC,eAAe,Q","file":"static/js/main.aa9c1df1.chunk.js","sourcesContent":["// // frontend/src/components/DataList.js\n// import React, { useState, useEffect } from 'react';\n\n// const DataList = () => {\n//   const [data, setData] = useState([]);\n//   const [currentPage, setCurrentPage] = useState(1);\n//   const [totalPages, setTotalPages] = useState(1);\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch(`/api/data?page=${currentPage}`);\n//       const result = await response.json();\n//       setData(result.data);\n//       setTotalPages(result.totalPages);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//     }\n//   };\n\n//   useEffect(() => {\n//     fetchData();\n//   }, [currentPage]);\n\n//   const handlePageChange = (newPage: number) => {\n//     setCurrentPage(newPage);\n//   };\n\n//   return (\n//     <div>\n//       <h1>Data List</h1>\n//       <ul>\n//         {data.map((item) => (\n//           <li key={item.id}>\n//             <strong>{item.title}</strong>\n//             <br />\n//             <img src={item.image_url} alt={item.title} />\n//           </li>\n//         ))}\n//       </ul>\n\n//       <div>\n//         {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\n//           <button key={page} onClick={() => handlePageChange(page)}>\n//             {page}\n//           </button>\n//         ))}\n//       </div>\n//     </div>\n//   );\n// };\n\n\n// frontend/src/components/DataList.tsx\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faAnglesLeft, faAngleLeft, faAnglesRight, faAngleRight } from '@fortawesome/free-solid-svg-icons'\nimport { IconProp } from '@fortawesome/fontawesome-svg-core';\n\ninterface DataItem {\n  id: number;\n  title: string;\n  image_url: string;\n}\n\ninterface ApiResponse {\n  data: DataItem[];\n  page: number;\n  totalPages: number;\n  totalCount: number;\n}\n\nconst faAnglesLeftIcon = <FontAwesomeIcon icon={faAnglesLeft} />\nconst faAngleLeftIcon = <FontAwesomeIcon icon={faAngleLeft} />\nconst faAnglesRightIcon = <FontAwesomeIcon icon={faAnglesRight} />\nconst faAngleRightIcon = <FontAwesomeIcon icon={faAngleRight} />\n\n// ReactDOM.render(faAnglesLeftIcon, document.body)\n// ReactDOM.render(faAngleLeftIcon, document.body)\n// ReactDOM.render(faAnglesRightIcon, document.body)\n// ReactDOM.render(faAngleRightIcon, document.body)\n\n\nconst DataList: React.FC<{}> = () => {\n  const [data, setData] = useState<DataItem[]>([]);\n  const [currentPage, setCurrentPage] = useState<number>(1);\n  const [totalPages, setTotalPages] = useState<number>(1);\n  const [totalCount, setTotalCount] = useState<number>(0);\n  const visiblePages = 5; // Number of shown pages\n\n  const fetchData = async (page: number) => {\n    try {\n      const response = await fetch(`http://localhost:8081/api/data?page=${page}`);\n      const result: ApiResponse = await response.json();\n      setData(result.data);\n      setCurrentPage(result.page);\n      setTotalPages(result.totalPages);\n      setTotalCount(result.totalCount);\n    } catch (error) {\n      console.error('Error fetching data', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchData(currentPage);\n  }, [currentPage]);\n\n  const handlePageChange = (newPage: number) => {\n    setCurrentPage(newPage);\n  };\n\n  return (\n    <div>\n      <h1>Data List</h1>\n      <ul>\n        {data.map((item) => (\n          <li key={item.id}>\n            <strong>{item.title}</strong>\n            <br />\n            <img src={item.image_url} alt={item.title} />\n          </li>\n        ))}\n      </ul>\n\n      <div>\n        <p>\n          Page {currentPage} of {totalPages} | Total Records: {totalCount}\n        </p>\n        {Array.from({ length: totalPages }, (_, index) => index + 1).map((page) => (\n          <button key={page} onClick={() => handlePageChange(page)}>\n            {page}\n          </button>\n        ))}\n      </div>\n\n\n      <div>\n        <button onClick={() => handlePageChange(1)} disabled={currentPage === 1}>\n        <FontAwesomeIcon icon={faAnglesLeft} /> First \n        </button>\n        <button onClick={() => handlePageChange(currentPage - 1)} disabled={currentPage === 1}>\n        <FontAwesomeIcon icon={faAngleLeft} style={{color: \"#000000\",}} /> Previous \n        </button>\n\n        {/* Zobrazení stránek */}\n        {Array.from({ length: Math.min(visiblePages, totalPages) }, (_, index) => {\n          const pageNumber = index + 1;\n          const startPage = Math.max(1, Math.min(currentPage - Math.floor(visiblePages / 2), totalPages - visiblePages + 1));\n          \n          return (\n            <button key={pageNumber} onClick={() => handlePageChange(startPage + index)} disabled={pageNumber === currentPage}>\n              {startPage + index}\n            </button>\n          );\n        })}\n\n        <button onClick={() => handlePageChange(currentPage + 1)} disabled={currentPage === totalPages}>\n          Next <FontAwesomeIcon icon={faAngleRight} style={{color: \"#000000\",}} />\n        </button>\n        <button onClick={() => handlePageChange(totalPages)} disabled={currentPage === totalPages}>\n          Last <FontAwesomeIcon icon={faAnglesRight} style={{color: \"#000000\",}} />\n        </button>\n      </div>\n\n    </div>\n\n\n\n  );\n};\n\nexport default DataList;","// // import React, { useEffect, useState } from 'react';\n// // frontend/src/App.js\n// import React from 'react';\n// import DataList from './components/DataList';\n\n// const App: React.FC = () => {\n//   const [data, setData] = React.useState<any[]>([]);\n\n//   React.useEffect(() => {\n//     fetchData();\n//   }, []);\n\n//   const fetchData = async () => {\n//     try {\n//       const response = await fetch('/api/data');\n//       const result = await response.json();\n//       setData(result);\n//     } catch (error) {\n//       console.error('Error fetching data', error);\n//     }\n//   };\n\n//   return (\n//     <div>\n//         <header>\n//         <h1>React App</h1>\n//         </header>\n//         <main>\n//         <DataList />\n//         </main>\n//     </div>\n//     );\n// };\n\n// export default App;\n\nimport React from 'react';\nimport DataList from './components/DataList';\n\nconst App: React.FC = () => {\n  return (\n    <div>\n      <h1>Flats for sale (SReality)</h1>\n      <DataList />\n    </div>\n  );\n};\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}